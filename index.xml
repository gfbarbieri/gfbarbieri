<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Greg Barbieri</title><link>https://gfbarbieri.github.io/</link><description>Recent content on Greg Barbieri</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://gfbarbieri.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Calculate a Geographic Buffer</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/calc_geo_buffer/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/calc_geo_buffer/</guid><description>Calculate a buffer around a geographic area.
Imports import geopandas as gpd import matplotlib.pyplot as plt Load State Shape File gdf_st = gpd.read_file(substate, geometry=&amp;#39;geometry&amp;#39;) Subset to Washington, DC Convert to the CRS EPSG 6933. The main benefit: units are in meters.
gdf_dc = gdf_st.loc[gdf_st[&amp;#39;STUSPS&amp;#39;] == &amp;#39;DC&amp;#39;].to_crs(epsg=6933) Find Buffer Around Polygon Use buffer method to calculate the buffer around the polygon. Pass 1609 to distance to create a 1 mile buffer around the DC polygon.</description></item><item><title>Calculate a Geographic Centroid</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/calc_geo_centroid/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/calc_geo_centroid/</guid><description>Calculate centroid of a geographic area.
Imports import geopandas as gpd import matplotlib.pyplot as plt Load Shape File gdf_st = gpd.read_file(substate, geometry=&amp;#39;geometry&amp;#39;) Subset to Washington, DC gdf_dc = gdf_st.loc[gdf_st[&amp;#39;STUSPS&amp;#39;] == &amp;#39;DC&amp;#39;] Calculate Centroid gdf_dc_ct = gdf_dc.centroid Plot fig, ax = plt.subplots() gdf_dc.plot(ax=ax) gdf_dc_ct.plot(ax=ax, color=&amp;#39;yellow&amp;#39;) &amp;lt;AxesSubplot:&amp;gt;</description></item><item><title>Download Geographic Databases</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/download_geodatabase/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/download_geodatabase/</guid><description>Download Census Geo-database and the database documentation.
TIGER Geodatabases are spatial extracts from the Census Bureau MAF/TIGER database, designed for use with Esriâ€™s ArcGIS. These files do not include demographic data, but they contain geographic entity codes that can be linked to Census Bureau demographic data, available on American FactFinder.
Imports import requests Download Census Geodatabase response = requests.get(&amp;#39;https://www2.census.gov/geo/tiger/TGRGDB18/tlgdb_2018_a_us_substategeo.gdb.zip&amp;#39;) with open(&amp;#39;census_gdb.zip&amp;#39;, &amp;#39;wb&amp;#39;) as zf: zf.write(response.content) Download Census Geodatabase Documentation Iterate over content with iter_content if the file is very large, otherwise content suffices without the for-loop.</description></item><item><title>Find Difference Between Geographies</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/find_geographic_difference/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/find_geographic_difference/</guid><description>GIS intersection using overlay.
Imports import geopandas as gpd Import Shape Files Import the U.S. State shape file and the U.S. Urban Area shape file.
gdf_st = gpd.read_file(substate, geometry=&amp;#39;geometry&amp;#39;) gdf_ua = gpd.read_file(national, geometry=&amp;#39;geometry&amp;#39;) Subset Shape Files Subset to Virginia
gdf_st_va = gdf_st.loc[gdf_st[&amp;#39;STUSPS&amp;#39;] == &amp;#39;VA&amp;#39;].reset_index(drop=True) Subset to Washington, DC urban area.
gdf_ua_wdc = gdf_ua.loc[gdf_ua[&amp;#39;NAMELSAD&amp;#39;] == &amp;#39;Washington, DC--VA--MD Urbanized Area&amp;#39;].reset_index(drop=True) Overlay Create a new shape which is the Washington, DC Urban Area without Virginia by passing difference.</description></item><item><title>Load a Geographic Layer</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/load_geo_layer/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/load_geo_layer/</guid><description>Load a layer from a geo-database table or shape file using GeoPandas.
Imports import geopandas as gpd Load Shape File Census shape files usually store long-lat coordinates in a column called &amp;lsquo;geometry&amp;rsquo;. Pass geometry to geometry argument.
CRS stands for Coordinate Reference System. This tells GeoPandas how you coordinates relate to one another, which is important for visualizations and calculations. EPSG:4326 is for WGS84 Latitude/Longitude, a common projection. Pass ESPG:4326 to crs argument.</description></item><item><title>Manipulate Shape Files</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/basic_shape_file/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/basic_shape_file/</guid><description>Basic ESRI Shape File tasks using GeoPandas: import, edit, plot, export shape files.
Imports import geopandas as gpd Import Shape File gdf = gpd.read_file(&amp;#34;us_county.shp&amp;#34;) Edit Shape File gdf = gdf.loc[gdf[&amp;#39;STATEFP&amp;#39;] == &amp;#39;31&amp;#39;] Plot Shape File gdf.plot() &amp;lt;AxesSubplot:&amp;gt; Export Shape File Export creates all 5 files: .cpg, .dbf, .prj, .shp, .shx.
gdf.to_file(&amp;#39;us_state_31.shp&amp;#39;)</description></item><item><title>Print Names of Geographic Layers</title><link>https://gfbarbieri.github.io/code_tutorials/gis/basics/print_geo_layer_names/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/gis/basics/print_geo_layer_names/</guid><description>Print the name of the layers available a geo-database table.
Imports import fiona import os Determine Available Layers For each file listed in the geo-database with the file extension .gdbtable, print the name of the layers available.
for f in os.listdir(gdb_dir): f_name, f_ext = os.path.splitext(f) if f_ext == &amp;#39;.gdbtable&amp;#39;: layers = fiona.listlayers(os.path.join(gdb_dir, f)) print(f&amp;#34;{f_name}: {layers}&amp;#34;) a00000001 : ['GDB_SystemCatalog'] a00000002 : ['GDB_DBTune'] a00000003 : ['GDB_SpatialRefs'] a00000004 : ['GDB_Items'] a00000005 : ['GDB_ItemTypes'] a00000006 : ['GDB_ItemRelationships'] a00000007 : ['GDB_ItemRelationshipTypes'] a00000009 : ['Block_Group'] a0000000a : ['State'] a0000000b : ['County_Subdivision'] a0000000c : ['Consolidated_City'] a0000000d : ['Census_Tract'] a0000000e : ['Census_Designated_Place'] a0000000f : ['County'] a00000010 : ['Incorporated_Place']</description></item><item><title>Birthday Problem</title><link>https://gfbarbieri.github.io/code_tutorials/math/probability/birthday_problem/</link><pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/math/probability/birthday_problem/</guid><description>If there are n people in the room, the probability that all n birthdays are distinct equals (none are equal):
$\displaystyle\prod_{k=1}^{n}{\frac{365-(k-1)}{365}}$
Therefore, the probability is 1 minus the results of the product.
Imports import numpy as np import matplotlib.pyplot as plt Calculate Probability indiv_prob_list = [] for num in range(1,101): indiv_prob = (365-(num-1))/365 indiv_prob_list.append(indiv_prob) Plot Probability plt.plot(np.linspace(1,100,100), 1-np.cumprod(indiv_prob_list))</description></item><item><title>Poker Hands</title><link>https://gfbarbieri.github.io/code_tutorials/math/counting/poker_hands/</link><pubDate>Sat, 23 Sep 2017 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/math/counting/poker_hands/</guid><description>This problem is taken directly from Professor Morin&amp;rsquo;s Probability For the Enthusiastic Beginner, Chapter 1, page 38.
In a standard 52-card deck, how many different five-card poker hands are there of each of the following types?
Full House Straight Flush Flush Straight One pair Two pairs Three of a kind Four of a kind None of the above Imports import itertools import collections as col import numpy as np Creating a Deck of Cards A deck of cards includes every unique pairing of the suits and ranks.</description></item><item><title>Remove Repetitions</title><link>https://gfbarbieri.github.io/code_tutorials/math/counting/remove_repetitions/</link><pubDate>Sat, 26 Aug 2017 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/math/counting/remove_repetitions/</guid><description>This question comes from Professor David Morin&amp;rsquo;s book, Probability For the Enthusiastic Beginner, Chapter 1, page 26.
We know that the number of ordered sets of three people chosen from five people is $5 \times 4 \times 3 = 60$. Reproduce this results by starting with the naive answer of $5^3 = 125$ ordered sets where repetitions are allowed, and then subtracting off the number of triplets that have repeated people.</description></item><item><title>Roll a Die, Flip a Coin</title><link>https://gfbarbieri.github.io/code_tutorials/math/counting/coin_die/</link><pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/math/counting/coin_die/</guid><description>This question comes from Professor David Morin&amp;rsquo;s book, Probability For the Enthusiastic Beginner, Chapter 1, page 26.
One person rolls two six-sided dice, and another person flips six two-sided coins. Which setup has the larger number of possible outcomes, assuming that the order matters? Import the itertools library and create a list called which will represent a six-sided die. You could easily mimic a 20-sided die by creating a list with 1-20 instead of 1-6.</description></item><item><title>Arranging Kids in Seats</title><link>https://gfbarbieri.github.io/code_tutorials/math/counting/arranging_kids/</link><pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_tutorials/math/counting/arranging_kids/</guid><description>This introductory question comes directly from Probability For the Enthusiastic Beginner, Chapter 1, page 26.
Six girls and four boys are to be assigned to ten seats in a row, with the stipulations that a girl sits in the third seat and a boy sits in the eighth seat. How many arrangements are possible? If we ignore the stipulations for a moment, then the question becomes â€œhow many arrangements of 10 people (6 girls + 4 boys) are possible?</description></item><item><title>Code Tutorial Topics</title><link>https://gfbarbieri.github.io/code_topics/code_topics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gfbarbieri.github.io/code_topics/code_topics/</guid><description>Machine Learning Basics -- Python Data Analysis -- Math Counting Poker Hands Remove Repetitions Roll a Die, Flip a Coin Arranging Kids in Seats Probability Birthday Problem
GIS Basics Calculate a Geographic Buffer Calculate a Geographic Centroid Download Geographic Databases Find Difference Between Geographies Load a Geographic Layer Manipulate Shape Files Print Names of Geographic Layers</description></item></channel></rss>